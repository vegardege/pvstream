name: Code Quality

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  python-checks:
    name: Python Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python 3.13
        uses: actions/setup-python@v6
        with:
          python-version: 3.13

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Install maturin
        run: pip install maturin

      - name: Build Python package
        run: maturin build --release

      - name: Install built package
        run: pip install target/wheels/*.whl

      - name: Check type stubs exist
        run: |
          python -c "import pvstream; print('Import successful')"
          test -f pvstream.pyi && echo "Type stub file exists"

      - name: Validate Python interface
        run: |
          python -c "
          import pvstream
          # Check that main functions exist
          assert hasattr(pvstream, 'stream_from_file')
          assert hasattr(pvstream, 'stream_from_url')
          assert hasattr(pvstream, 'parquet_from_file')
          assert hasattr(pvstream, 'parquet_from_url')
          print('All expected functions are available')
          "

  type-check:
    name: Type Check (mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install mypy
        run: pip install mypy

      - name: Check type stubs
        run: mypy --strict pvstream.pyi
